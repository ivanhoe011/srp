<?php
/**
 * Bender Modeler
 *
 * Our Simple Models
 *
 * @category   lib
 * @package    lib_db
 * @copyright  Copyright (c) 2008-2010 Bender Modeler (http://www.ctrl-zetta.com/#code)
 * @author    zetta
 * @version    1.0.0 SVN: $Id$
 */

/**
 * Requires
 */
require_once "lib/db/CatalogInterface.php";
require_once "lib/db/Criteria.php";
require_once "lib/db/DBAO.php";

/**
 * Clase abstracta que representa un catalogo general
 *
 * @category   lib
 * @package    lib_db
 * @copyright  Copyright (c) 2008-2010 Bender Modeler (http://www.ctrl-zetta.com/#code)
 * @copyright  This File as been proudly generated by Bender (http://code.google.com/p/bender-modeler/). <chentepixtol> <zetta>
 * @author     zetta 
 * @version    1.0.0 SVN: $Revision$
 */
abstract class Catalog implements CatalogInterface
{

    /**
     * Propiedad que representa el objeto db.
     * @var Zend_Db_Adapter_Abstract Objeto Zend_Db_Adapter_Abstract
     */
    protected $db;
    
    /**
     * Can't Clone Singleton Class 
     */
    private function __clone(){}

    /**
     * Date part usado para los campos tipo Date o DateTime
     * @var string $datePart
     */
    protected $datePart;

    /**
     * Constructor de la clase catalogo
     */
    public function Catalog()
    {
        $this->datePart = "YYYY-MM-dd hh:mm:ss";
        $this->db = DBAO::Database();
    }
    
  
    /**
     * array_filter
     */
    public static function notNull($value)
    {
       return !is_null($value);
    }
    /**
     * Inicia una transacción
     */
    public function beginTransaction(){
    	try {
	    	$this->getDB()->beginTransaction();
    	}catch(Exception $e) {
    		die("No se pudo iniciar la Transacción".$e->getMessage());
    	}
    }

    /**
     * @return Zend_Db_Adapter_Abstract
     */
    public function getDB(){
    	return $this->db;
    }
    /**
     * Realiza un commit de una transacción
     */
	public function commitTransaction(){
    	try {
	    	$this->getDB()->commit();
    	}catch(Exception $e) {
    		die("No se pudo realizar commit");
    	}
    }
    /**
     * Realiza un commit de una transacción
     */
    public function rollbackTransaction(){
    	try {
	    	$this->getDB()->rollback();
    	}catch(Exception $e) {
    		die("No se pudo realizar rollback");
    	}
    }
}

