<?php
/**
 * SRP
 *
 * SRP INELECTRA
 *
 * @category   lib
 * @package    lib_models
 * @copyright  Copyright (c) 2010 PCSMEXICO
 * @author     <arturo>, $LastChangedBy$
 * @version    1.0.2 SVN: $Id$
 */
/**
 * Dependences
 */
require_once "application/models/beans/TimetableLogApprover.php";

/**
 * Clase TimetableLogApproverFactory
 *
 * @category   lib
 * @package    lib_models
 * @subpackage lib_models_factories
 * @copyright  Copyright (c) 2010 PCSMEXICO 
 * @copyright  This File has been proudly generated by Bender (http://code.google.com/p/bender-modeler/). <chentepixtol> <zetta>
 * @author     <zetta> & <chentepixtol>
 * @version    1.0.2 SVN: $Revision$
 */
class TimetableLogApproverFactory
{

   /**
    * Create a new TimetableLogApprover instance
    * @param int $idCurrentApprover
    * @param int $idFormerApprover
    * @param int $type
    * @param int $typeApprover
    * @param int $idTimetable
    * @param string $timestamp
    * @param int $idEmployee
    * @return TimetableLogApprover
    */
   public static function create($idCurrentApprover, $idFormerApprover, $type, $typeApprover, $idTimetable, $timestamp, $idEmployee)
   {
      throw new Exception('Factory Deprecated');
      $newTimetableLogApprover = new TimetableLogApprover();
      $newTimetableLogApprover
          ->setIdCurrentApprover($idCurrentApprover)
          ->setIdFormerApprover($idFormerApprover)
          ->setType($type)
          ->setTypeApprover($typeApprover)
          ->setIdTimetable($idTimetable)
          ->setTimestamp($timestamp)
          ->setIdEmployee($idEmployee)
      ;
      return $newTimetableLogApprover;
   }
   
    /**
     * Método que construye un objeto TimetableLogApprover y lo rellena con la información del rowset
     * @param array $fields El arreglo que devolvió el objeto Zend_Db despues del fetch
     * @return TimetableLogApprover 
     */
    public static function createFromArray($fields)
    {
        $newTimetableLogApprover = new TimetableLogApprover();
        $newTimetableLogApprover->setIdTimetableLogApprover($fields['id_timetable_log_approver']);
        $newTimetableLogApprover->setIdTimetableLog($fields['id_timetable_log']);
        $newTimetableLogApprover->setIdCurrentApprover($fields['id_current_approver']);
        $newTimetableLogApprover->setIdFormerApprover($fields['id_former_approver']);
        $newTimetableLogApprover->setType($fields['type']);
        $newTimetableLogApprover->setTypeApprover($fields['type_approver']);
        $newTimetableLogApprover->setIdTimetable($fields['id_timetable']);
        $newTimetableLogApprover->setTimestamp($fields['timestamp']);
        $newTimetableLogApprover->setIdEmployee($fields['id_employee']);
        return $newTimetableLogApprover;
    }
   
}
