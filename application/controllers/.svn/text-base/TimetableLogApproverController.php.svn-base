<?php
/**
 * SRP
 *
 * SRP INELECTRA
 *
 * @category   Application
 * @package    Application_Controllers
 * @copyright  Copyright (c) 2010 PCSMEXICO
 * @author     <arturo>, $LastChangedBy$
 * @version    1.0.2 SVN: $Id$
 */

/**
 * Dependences
 */
require_once "lib/controller/CrudController.php";
require_once "application/models/catalogs/TimetableLogApproverCatalog.php";

/**
 * TimetableLogApproverController (CRUD for the TimetableLogApprover Objects)
 *
 * @category   Project
 * @package    Project_Controllers
 * @copyright  Copyright (c) 2010 PCSMEXICO 
 * @copyright  This File has been proudly generated by Bender (http://code.google.com/p/bender-modeler/). <chentepixtol> <zetta>
 * @author     <zetta> & <chentepixtol>
 * @version    1.0.2 SVN: $Revision$
 */
class TimetableLogApproverController extends CrudController
{
    
    /**
     * alias for the list action
     */
    public function indexAction()
    {
        $this->_forward('list');
    }
    
    /**
     * List the objects TimetableLogApprover actives
     */
    public function listAction()
    {
        $this->view->timetableLogApprovers = TimetableLogApproverCatalog::getInstance()->getActives();
        $this->setTitle('List the TimetableLogApprover');
    }
    
    /**
     * delete an TimetableLogApprover
     */
    public function deleteAction()
    {
        $timetableLogApproverCatalog = TimetableLogApproverCatalog::getInstance();
        $idTimetableLogApprover = $this->getRequest()->getParam('idTimetableLogApprover');
        $timetableLogApprover = $timetableLogApproverCatalog->getById($idTimetableLogApprover);
        $timetableLogApproverCatalog->deactivate($timetableLogApprover);
        $this->setFlash('ok','Successfully removed the TimetableLogApprover');
        $this->_redirect('timetable-log-approver/list');
    }
    
    /**
     * Form for edit an TimetableLogApprover
     */
    public function editAction()
    {
        $timetableLogApproverCatalog = TimetableLogApproverCatalog::getInstance();
        $idTimetableLogApprover = $this->getRequest()->getParam('idTimetableLogApprover');
        $timetableLogApprover = $timetableLogApproverCatalog->getById($idTimetableLogApprover);
        $post = array(
            'id_timetable_log_approver' => $timetableLogApprover->getIdTimetableLogApprover(),
            'id_timetable_log' => $timetableLogApprover->getIdTimetableLog(),
            'id_current_approver' => $timetableLogApprover->getIdCurrentApprover(),
            'id_former_approver' => $timetableLogApprover->getIdFormerApprover(),
            'type' => $timetableLogApprover->getType(),
            'type_approver' => $timetableLogApprover->getTypeApprover(),
        );
        $this->view->post = $post;
        $this->setTitle('Edit TimetableLogApprover');
    }
    
    /**
     * Create an TimetableLogApprover
     */
    public function createAction()
    {   
        $timetableLogApproverCatalog = TimetableLogApproverCatalog::getInstance();
        $idTimetableLog = utf8_decode($this->getRequest()->getParam('id_timetable_log'));
        $idCurrentApprover = utf8_decode($this->getRequest()->getParam('id_current_approver'));
        $idFormerApprover = utf8_decode($this->getRequest()->getParam('id_former_approver'));
        $type = utf8_decode($this->getRequest()->getParam('type'));
        $typeApprover = utf8_decode($this->getRequest()->getParam('type_approver'));
        $timetableLogApprover = TimetableLogApproverFactory::create($idTimetableLog, $idCurrentApprover, $idFormerApprover, $type, $typeApprover);
        $timetableLogApproverCatalog->create($timetableLogApprover);  
        $this->view->setTpl('_row');
        $this->view->setLayoutFile(false);
        $this->view->timetableLogApprover = $timetableLogApprover;
    }
    
    /**
     * Update an TimetableLogApprover
     */
    public function updateAction()
    {
        $timetableLogApproverCatalog = TimetableLogApproverCatalog::getInstance();
        $idTimetableLogApprover = $this->getRequest()->getParam('idTimetableLogApprover');
        $timetableLogApprover = $timetableLogApproverCatalog->getById($idTimetableLogApprover);
        $timetableLogApprover->setIdTimetableLog($this->getRequest()->getParam('id_timetable_log'));
        $timetableLogApprover->setIdCurrentApprover($this->getRequest()->getParam('id_current_approver'));
        $timetableLogApprover->setIdFormerApprover($this->getRequest()->getParam('id_former_approver'));
        $timetableLogApprover->setType($this->getRequest()->getParam('type'));
        $timetableLogApprover->setTypeApprover($this->getRequest()->getParam('type_approver'));
        $timetableLogApproverCatalog->update($timetableLogApprover);
        $this->setFlash('ok','Successfully edited the TimetableLogApprover');
        $this->_redirect('timetable-log-approver/list');
    }
    
}
