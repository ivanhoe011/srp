<?php
/**
 * SRP
 *
 * SRP INELECTRA
 *
 * @category   Application
 * @package    Application_Controllers
 * @copyright  Copyright (c) 2010 PCSMEXICO
 * @author     <arturo>, $LastChangedBy$
 * @version    1.0.2 SVN: $Id$
 */

/**
 * Dependences
 */
require_once "lib/controller/CrudController.php";
require_once "application/models/catalogs/ProjectApproversListCatalog.php";

/**
 * ProjectApproversListController (CRUD for the ProjectApproversList Objects)
 *
 * @category   Project
 * @package    Project_Controllers
 * @copyright  Copyright (c) 2010 PCSMEXICO 
 * @copyright  This File has been proudly generated by Bender (http://code.google.com/p/bender-modeler/). <chentepixtol> <zetta>
 * @author     <zetta> & <chentepixtol>
 * @version    1.0.2 SVN: $Revision$
 */
class ProjectApproversListController extends CrudController
{
    
    /**
     * alias for the list action
     */
    public function indexAction()
    {
        $this->_forward('list');
    }
    
    /**
     * List the objects ProjectApproversList actives
     */
    public function listAction()
    {
        $this->view->projectApproversLists = ProjectApproversListCatalog::getInstance()->getActives();
        $this->setTitle('List the ProjectApproversList');
    }
    
    /**
     * delete an ProjectApproversList
     */
    public function deleteAction()
    {
        $projectApproversListCatalog = ProjectApproversListCatalog::getInstance();
        $idProjectApproversList = $this->getRequest()->getParam('idProjectApproversList');
        $projectApproversList = $projectApproversListCatalog->getById($idProjectApproversList);
        $projectApproversListCatalog->deactivate($projectApproversList);
        $this->setFlash('ok','Successfully removed the ProjectApproversList');
        $this->_redirect('project-approvers-list/list');
    }
    
    /**
     * Form for edit an ProjectApproversList
     */
    public function editAction()
    {
        $projectApproversListCatalog = ProjectApproversListCatalog::getInstance();
        $idProjectApproversList = $this->getRequest()->getParam('idProjectApproversList');
        $projectApproversList = $projectApproversListCatalog->getById($idProjectApproversList);
        $post = array(
            'id_project_approvers_list' => $projectApproversList->getIdProjectApproversList(),
            'id_project' => $projectApproversList->getIdProject(),
            'id_employee' => $projectApproversList->getIdEmployee(),
            'is_main' => $projectApproversList->getIsMain(),
            'level' => $projectApproversList->getLevel(),
        );
        $this->view->post = $post;
        $this->setTitle('Edit ProjectApproversList');
    }
    
    /**
     * Create an ProjectApproversList
     */
    public function createAction()
    {   
        $projectApproversListCatalog = ProjectApproversListCatalog::getInstance();
        $idProject = utf8_decode($this->getRequest()->getParam('id_project'));
        $idEmployee = utf8_decode($this->getRequest()->getParam('id_employee'));
        $isMain = utf8_decode($this->getRequest()->getParam('is_main'));
        $level = utf8_decode($this->getRequest()->getParam('level'));
        $projectApproversList = ProjectApproversListFactory::create($idProject, $idEmployee, $isMain, $level);
        $projectApproversListCatalog->create($projectApproversList);  
        $this->view->setTpl('_row');
        $this->view->setLayoutFile(false);
        $this->view->projectApproversList = $projectApproversList;
    }
    
    /**
     * Update an ProjectApproversList
     */
    public function updateAction()
    {
        $projectApproversListCatalog = ProjectApproversListCatalog::getInstance();
        $idProjectApproversList = $this->getRequest()->getParam('idProjectApproversList');
        $projectApproversList = $projectApproversListCatalog->getById($idProjectApproversList);
        $projectApproversList->setIdProject($this->getRequest()->getParam('id_project'));
        $projectApproversList->setIdEmployee($this->getRequest()->getParam('id_employee'));
        $projectApproversList->setIsMain($this->getRequest()->getParam('is_main'));
        $projectApproversList->setLevel($this->getRequest()->getParam('level'));
        $projectApproversListCatalog->update($projectApproversList);
        $this->setFlash('ok','Successfully edited the ProjectApproversList');
        $this->_redirect('project-approvers-list/list');
    }
    
}
