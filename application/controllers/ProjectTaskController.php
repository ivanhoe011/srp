<?php
/**
 * SRP
 *
 * SRP INELECTRA
 *
 * @category   Application
 * @package    Application_Controllers
 * @copyright  Copyright (c) 2010 PCSMEXICO
 * @author     <arturo>, $LastChangedBy$
 * @version    1.0.2 SVN: $Id$
 */

/**
 * Dependences
 */
require_once "lib/controller/CrudController.php";
require_once "application/models/catalogs/ProjectTaskCatalog.php";

/**
 * ProjectTaskController (CRUD for the ProjectTask Objects)
 *
 * @category   Project
 * @package    Project_Controllers
 * @copyright  Copyright (c) 2010 PCSMEXICO 
 * @copyright  This File has been proudly generated by Bender (http://code.google.com/p/bender-modeler/). <chentepixtol> <zetta>
 * @author     <zetta> & <chentepixtol>
 * @version    1.0.2 SVN: $Revision$
 */
class ProjectTaskController extends CrudController
{
    
    /**
     * alias for the list action
     */
    public function indexAction()
    {
        $this->_forward('list');
    }
    
    /**
     * List the objects ProjectTask actives
     */
    public function listAction()
    {
        $this->view->projectTasks = ProjectTaskCatalog::getInstance()->getActives();
        $this->setTitle('List the ProjectTask');
    }
    
    /**
     * delete an ProjectTask
     */
    public function deleteAction()
    {
        $projectTaskCatalog = ProjectTaskCatalog::getInstance();
        $idProjectTask = $this->getRequest()->getParam('idProjectTask');
        $projectTask = $projectTaskCatalog->getById($idProjectTask);
        $projectTaskCatalog->deactivate($projectTask);
        $this->setFlash('ok','Successfully removed the ProjectTask');
        $this->_redirect('project-task/list');
    }
    
    /**
     * Form for edit an ProjectTask
     */
    public function editAction()
    {
        $projectTaskCatalog = ProjectTaskCatalog::getInstance();
        $idProjectTask = $this->getRequest()->getParam('idProjectTask');
        $projectTask = $projectTaskCatalog->getById($idProjectTask);
        $post = array(
            'id_project_task' => $projectTask->getIdProjectTask(),
            'task_code' => $projectTask->getTaskCode(),
            'description' => $projectTask->getDescription(),
            'type' => $projectTask->getType(),
            'status' => $projectTask->getStatus(),
        );
        $this->view->post = $post;
        $this->setTitle('Edit ProjectTask');
    }
    
    /**
     * Create an ProjectTask
     */
    public function createAction()
    {   
        $projectTaskCatalog = ProjectTaskCatalog::getInstance();
        $taskCode = utf8_decode($this->getRequest()->getParam('task_code'));
        $description = utf8_decode($this->getRequest()->getParam('description'));
        $type = utf8_decode($this->getRequest()->getParam('type'));
        $status = utf8_decode($this->getRequest()->getParam('status'));
        $projectTask = ProjectTaskFactory::create($taskCode, $description, $type, $status);
        $projectTaskCatalog->create($projectTask);  
        $this->view->setTpl('_row');
        $this->view->setLayoutFile(false);
        $this->view->projectTask = $projectTask;
    }
    
    /**
     * Update an ProjectTask
     */
    public function updateAction()
    {
        $projectTaskCatalog = ProjectTaskCatalog::getInstance();
        $idProjectTask = $this->getRequest()->getParam('idProjectTask');
        $projectTask = $projectTaskCatalog->getById($idProjectTask);
        $projectTask->setTaskCode($this->getRequest()->getParam('task_code'));
        $projectTask->setDescription($this->getRequest()->getParam('description'));
        $projectTask->setType($this->getRequest()->getParam('type'));
        $projectTask->setStatus($this->getRequest()->getParam('status'));
        $projectTaskCatalog->update($projectTask);
        $this->setFlash('ok','Successfully edited the ProjectTask');
        $this->_redirect('project-task/list');
    }

    public function  getTasksAction(){
        $this->noRender();
        $id_type=$this->getRequest()->getParam("id_project");
        $id_type=explode("_", $id_type);

        if($id_type[0]==1)
            $this->_redirect('./specific-project-task/get-tasks?id_project='.$id_type[1]);
        else if($id_type[0]==2)
            $this->_redirect('./department-project-task/get-tasks?id_project='.$id_type[1]);
    }
    
}
